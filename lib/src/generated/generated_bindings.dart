// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

class NativePrimes {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  NativePrimes(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  NativePrimes.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  ffi.Pointer<Primes> findPrimesUpTo(
    int n,
  ) {
    return _findPrimesUpTo(
      n,
    );
  }

  late final _findPrimesUpToPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<Primes> Function(ffi.Int32)>>(
          'findPrimesUpTo');
  late final _findPrimesUpTo =
      _findPrimesUpToPtr.asFunction<ffi.Pointer<Primes> Function(int)>();
}

class primes extends ffi.Struct {
  external ffi.Pointer<ffi.Int32> numbers;

  @ffi.Int32()
  external int count;
}

typedef Primes = primes;
